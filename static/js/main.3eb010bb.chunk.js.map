{"version":3,"sources":["Components/Form.jsx","Components/Todo.jsx","Components/TodoList.jsx","Components/App.jsx","index.js"],"names":["Form","props","inputText","setInputText","useState","onChange","event","input","target","value","type","className","onClick","onAdd","preventDefault","status","name","Todo","completedT","text","onCheckT","idT","console","log","onTrashT","TodoList","idTL","completedTL","listText","onTrash","onCheck","App","items","setItems","setStatus","filteredTodos","setFilteredTodos","trashItem","filter","item","id","checkItem","map","completed","useEffect","handleFilter","prevItems","itemText","Math","random","todoItem","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6JA6CeA,MA3Cf,SAAcC,GACZ,MAAOC,EAAWC,GAAgBC,mBAAS,IAoB3C,OACE,iCACE,uBACEC,SArBN,SAAqBC,GACnB,MAAMC,EAAQD,EAAME,OAAOC,MAE3BN,EAAaI,IAmBTG,KAAK,OACLC,UAAU,aACVF,MAAOP,IAET,wBAAQU,QApBZ,SAAqBN,GACnBL,EAAMY,MAAMX,GACZC,EAAa,IACbG,EAAMQ,kBAiB0BJ,KAAK,SAASC,UAAU,cAAtD,SACE,mBAAGA,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQN,SAjBd,SAAsBC,GAEpBL,EAAMc,OAAOT,EAAME,OAAOC,QAeUO,KAAK,QAAQL,UAAU,cAAvD,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kCCFKQ,MAlCf,SAAchB,GAgBZ,OACE,sBAAKU,UAAU,mDAAf,UACE,oBACEA,UAAS,oBAAeV,EAAMiB,WAAa,YAAc,KAD3D,SAIGjB,EAAMkB,OAET,wBAAQP,QAdZ,SAA0BN,GACxBL,EAAMmB,SAASnB,EAAMoB,KACrBC,QAAQC,IAAItB,GACZqB,QAAQC,IAAItB,EAAMoB,MAWmBV,UAAU,eAA7C,SACE,mBAAGA,UAAU,mBAEf,wBAAQC,QAvBZ,WACEX,EAAMuB,SAASvB,EAAMoB,KACrBC,QAAQC,IAAItB,GACZqB,QAAQC,IAAItB,EAAMoB,MAoBmBV,UAAU,YAA7C,SACE,mBAAGA,UAAU,uBCVNc,MAjBf,SAAkBxB,GAChB,OACE,qBAAKU,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACE,cAAC,EAAD,CAEEU,IAAKpB,EAAMyB,KACXR,WAAYjB,EAAM0B,YAClBR,KAAMlB,EAAM2B,SACZJ,SAAUvB,EAAM4B,QAChBT,SAAUnB,EAAM6B,SALX7B,EAAMyB,WCgGNK,MApGf,WACE,MAAOC,EAAOC,GAAY7B,mBAAS,KAC5BW,EAAQmB,GAAa9B,mBAAS,QAC9B+B,EAAeC,GAAoBhC,mBAAS,IAoBnD,SAASiC,EAAUhB,GAOjBY,EACED,EAAMM,QAAQC,GACLA,EAAKC,KAAOnB,KAKzB,SAASoB,EAAUpB,GAEjBY,EACED,EAAMU,KAAKH,GACLA,EAAKC,KAAOnB,EACP,IACFkB,EACHI,WAAYJ,EAAKI,WAGdJ,KA+Bb,OAzEAK,qBAAU,MAmDV,WACE,OAAQ7B,GACN,IAAK,YACHqB,EACEJ,EAAMM,QAAQC,IACc,IAAnBA,EAAKI,aAGhB,MACF,IAAK,cACHP,EACEJ,EAAMM,QAAQC,IACc,IAAnBA,EAAKI,aAGhB,MACF,QACEP,EAAiBJ,IAnErBa,KACC,CAACb,EAAOjB,IAcXO,QAAQC,IAAIS,GA0DV,sBAAKrB,UAAU,MAAf,UACE,iCACE,oBAAIA,UAAU,oCAAd,yBAEF,cAAC,EAAD,CAAME,MA1EV,SAAkBX,GAChB+B,GAAUa,GACD,IACFA,EACH,CACEC,SAAU7C,EACVyC,WAAW,EACXH,GAAoB,IAAhBQ,KAAKC,cAmEUlC,OA/B3B,SAAsBN,GACpByB,EAAUzB,MA+BP0B,EAAcO,KAAKQ,GAEhB,cAAC,EAAD,CAEExB,KAAMwB,EAASV,GACfb,YAAauB,EAASP,UACtBf,SAAUsB,EAASH,SACnBlB,QAASQ,EACTP,QAASW,GALJS,EAASV,UCvF1B,MAAMW,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.3eb010bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleInput(event) {\r\n    const input = event.target.value;\r\n    // console.log(input);\r\n    setInputText(input);\r\n  }\r\n\r\n  function handleClick(event) {\r\n    props.onAdd(inputText);\r\n    setInputText(\"\");\r\n    event.preventDefault();\r\n  }\r\n  // console.log(inputText);\r\n\r\n  function handleChange(event) {\r\n    // console.log(event.target.value);\r\n    props.status(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        onChange={handleInput}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={inputText}\r\n      ></input>\r\n      <button onClick={handleClick} type=\"submit\" className=\"todo-button\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={handleChange} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Todo(props) {\r\n  // const [isCompleted, setIsCompleted] = useState(false);\r\n  // const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n  function handleTrashClick() {\r\n    props.onTrashT(props.idT);\r\n    console.log(props);\r\n    console.log(props.idT);\r\n  }\r\n\r\n  function handleCheckClick(event) {\r\n    props.onCheckT(props.idT);\r\n    console.log(props);\r\n    console.log(props.idT);\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo animate__animated animate__lightSpeedInLeft\">\r\n      <li\r\n        className={`todo-item ${props.completedT ? \"completed\" : \" \"}`}\r\n        // style={{ textDecoration: props.completedT ? \"line-through\" : \"none\" }}\r\n      >\r\n        {props.text}\r\n      </li>\r\n      <button onClick={handleCheckClick} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={handleTrashClick} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo.jsx\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        <Todo\r\n          key={props.idTL}\r\n          idT={props.idTL}\r\n          completedT={props.completedTL}\r\n          text={props.listText}\r\n          onTrashT={props.onTrash}\r\n          onCheckT={props.onCheck}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Form from \"./Form.jsx\";\r\nimport TodoList from \"./TodoList.jsx\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    handleFilter();\r\n  }, [items, status]);\r\n\r\n  function addItems(inputText) {\r\n    setItems((prevItems) => {\r\n      return [\r\n        ...prevItems,\r\n        {\r\n          itemText: inputText,\r\n          completed: false,\r\n          id: Math.random() * 1000\r\n        }\r\n      ];\r\n    });\r\n  }\r\n  console.log(items);\r\n\r\n  function trashItem(idT) {\r\n    // Another way of trashing the items.\r\n    // setItems((prevItems) => {\r\n    //   return prevItems.filter((item) => {\r\n    //     return item.id !== idT;\r\n    //   });\r\n    // });\r\n    setItems(\r\n      items.filter((item) => {\r\n        return item.id !== idT;\r\n      })\r\n    );\r\n  }\r\n\r\n  function checkItem(idT) {\r\n    // Updating the array i.e. changing the completed value inside the object of the array based on event.\r\n    setItems(\r\n      items.map((item) => {\r\n        if (item.id === idT) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  function handleStatus(value) {\r\n    setStatus(value);\r\n  }\r\n\r\n  function handleFilter() {\r\n    switch (status) {\r\n      case \"completed\":\r\n        setFilteredTodos(\r\n          items.filter((item) => {\r\n            return item.completed === true;\r\n          })\r\n        );\r\n        break;\r\n      case \"uncompleted\":\r\n        setFilteredTodos(\r\n          items.filter((item) => {\r\n            return item.completed === false;\r\n          })\r\n        );\r\n        break;\r\n      default:\r\n        setFilteredTodos(items);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1 className=\"animate__animated animate__zoomIn\">Todo List</h1>\r\n      </header>\r\n      <Form onAdd={addItems} status={handleStatus} />\r\n      {filteredTodos.map((todoItem) => {\r\n        return (\r\n          <TodoList\r\n            key={todoItem.id}\r\n            idTL={todoItem.id}\r\n            completedTL={todoItem.completed}\r\n            listText={todoItem.itemText}\r\n            onTrash={trashItem}\r\n            onCheck={checkItem}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App.jsx\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}